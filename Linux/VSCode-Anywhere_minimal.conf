{
"base": {
	"proxy": { "url": null,
			   "login": null,
			   "password": null },
	"junest_terminal_opts": "-p \\\"-b ${InstallDir}:${JunestExternalPath}\\\" -f /bin/bash",
	"zeal_enabled": true
},
"extensions": {
	"minimal": {
		"enabled": true,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": null,
		"vsc_pkg": null,
		"vsc_settings": { "workbench.statusBar.feedback.visible": false },
		"vsc_keyboard": null,
		"junest_cmd_post": null,
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": null,
		"junest_env": { "QT_AUTO_SCREEN_SCALE_FACTOR": 0 },
		"vsc_env": null
	},
	"general": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": null,
		"vsc_pkg": [ "alefragnani.Bookmarks",
					 "alefragnani.project-manager",
					 "christian-kohler.path-intellisense",
					 "CoenraadS.bracket-pair-colorizer",
					 "formulahendry.code-runner",
					 "spywhere.guides",
					 "ybaumes.highlight-trailing-white-spaces",
					 "patrys.vscode-code-outline" ],
		"vsc_settings": { "editor.renderIndentGuides": false,
						  "symbolOutline.doSort" : true },
		"vsc_keyboard": [ { "key": "alt+l", "command": "bookmarks.toggle", "when": "editorTextFocus" } ],
		"junest_cmd_post": null,
		"cmd_post": [ "InstallVSCPkg MS-CEINTL.vscode-language-pack-$(echo ${LANG} | cut -d '.' -f 1 | cut -d '_' -f 1)" ],
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": null,
		"junest_env": null,
		"vsc_env": null
	},
	"git": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "git",
						"git-lfs",
						"nodejs" ],
		"vsc_pkg": [ "donjayamanne.githistory",
					 "eamodio.gitlens",
					 "Hirse.vscode-ungit" ],
		"vsc_settings": { "gitlens.defaultGravatarsStyle": "retro" },
		"vsc_keyboard": null,
		"junest_cmd_post": [ "chmod +x \"${JunestExternalPath}${VSCAppPath_extensions}/hirse.vscode-\"*\"/node_modules/ungit/bin/credentials-helper\"" ],
		"cmd_post": null,
		"junest_cmd_update": [ "chmod +x \"${JunestExternalPath}${VSCAppPath_extensions}/hirse.vscode-\"*\"/node_modules/ungit/bin/credentials-helper\"" ],
		"cmd_update": null,
		"zeal_pkg": null,
		"junest_env": null,
		"vsc_env": null
	},
	"theme": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": null,
		"vsc_pkg": [ "ifaxity.onedark",
					 "robertohuertasm.vscode-icons",
					 "akamud.vscode-theme-onedark" ],
		"vsc_settings": { "workbench.iconTheme": "vscode-icons",
						  "workbench.colorTheme": "Atom One Dark",
						  "vsicons.dontShowNewVersionMessage": true },
		"zeal_pkg": null,
		"junest_env": null,
		"vsc_env": null
	},
	"VSC-fonts": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "otf-fira-code" ],
		"vsc_pkg": null,
		"vsc_settings": { "editor.fontLigatures": true,
						  "editor.fontFamily": "Fira Code" },
		"vsc_keyboard": null,
		"junest_cmd_post": null,
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": null,
		"junest_env": null,
		"vsc_env": null
	},
	"tmux-gigix": {
		"enabled": false,
		"cmd_pre": [ "[ -f \"${FontsDir}/DejaVuSansMono-Bold-Oblique-Powerline.ttf\" ] || curl -L https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Bold%20Oblique%20for%20Powerline.ttf > \"${FontsDir}/DejaVuSansMono-Bold-Oblique-Powerline.ttf\"",
					 "[ -f \"${FontsDir}/DejaVuSansMono-Bold-Powerline.ttf\" ] || curl -L https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Bold%20for%20Powerline.ttf > \"${FontsDir}/DejaVuSansMono-Bold-Powerline.ttf\"",
					 "[ -f \"${FontsDir}/DejaVuSansMono-Oblique-Powerline.ttf\" ] || curl -L https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Oblique%20for%20Powerline.ttf > \"${FontsDir}/DejaVuSansMono-Oblique-Powerline.ttf\"",
					 "[ -f \"${FontsDir}/DejaVuSansMono-Powerline.ttf\" ] || curl -L https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20for%20Powerline.ttf > \"${FontsDir}/DejaVuSansMono-Powerline.ttf\"" ],
		"junest_cmd_pre": null,
		"junest_pkg": [ "git",
						"curl",
						"zsh",
						"zsh-completions",
					    "tmux" ],
		"vsc_pkg": null,
		"vsc_settings": { "terminal.integrated.shell.windows": "${JunestAppPath_install}/usr/bin/zsh.exe" },
		"vsc_keyboard": null,
		"junest_cmd_post": [ "test -d /opt/oh-my-zsh || git clone --depth=1 https://github.com/robbyrussell/oh-my-zsh.git /opt/oh-my-zsh",
							 "[ -f /opt/zsh/.zshrc ] || (mkdir -p /opt/zsh && echo 'export ZSH=/opt/oh-my-zsh' > /opt/zsh/.zshrc && echo 'ZSH_THEME=robbyrussell' >> /opt/zsh/.zshrc && echo 'plugins=(git zsh-syntax-highlighting zsh-autosuggestions)' >> /opt/zsh/.zshrc && echo 'source /opt/oh-my-zsh/oh-my-zsh.sh' >> /opt/zsh/.zshrc && echo 'HISTFILE=/opt/zsh/zsh_history' >> /opt/zsh/.zshrc && echo PROMPT=\"'\"'%{$fg[green]%}%n%{$fg[white]%}@%{$fg[magenta]%}%m%{$fg[white]%}:%{$fg[cyan]%}%~%{$reset_color%} ${ret_status}$(git_prompt_info)%{$reset_color%}'\"'\" >> /opt/zsh/.zshrc)",
							 "test -d /opt/oh-my-zsh/custom/plugins/zsh-syntax-highlighting || (cd /opt/oh-my-zsh/custom/plugins && git clone --depth=1 https://github.com/zsh-users/zsh-syntax-highlighting.git)",
							 "test -d /opt/oh-my-zsh/custom/plugins/zsh-autosuggestions || (cd /opt/oh-my-zsh/custom/plugins && git clone --depth=1 https://github.com/zsh-users/zsh-autosuggestions.git)",
							 "test -f /opt/oh-my-zsh/custom/demo.zsh || curl https://raw.githubusercontent.com/gigi206/tmux-gigix/master/demo.zsh > /opt/oh-my-zsh/custom/demo.zsh",
							 "test -f /etc/tmux.conf || (curl https://raw.githubusercontent.com/gigi206/tmux-gigix/master/tmux.conf > /etc/tmux.conf >> /etc/tmux.conf)",
							 "test -x /usr/local/bin/tmux-gigix || (echo 'cd; unset FPATH; /usr/bin/tmux -2u attach -t VSCode-Anywhere || ZDOTDIR=/opt/zsh /usr/bin/tmux -2u new -s VSCode-Anywhere zsh' > /usr/local/bin/tmux-gigix && chmod +x /usr/local/bin/tmux-gigix)" ],
		"cmd_post": null,
		"junest_cmd_update": [ "test -d /opt/oh-my-zsh && (cd /opt/oh-my-zsh && git pull origin master)",
							   "test -d /opt/oh-my-zsh/custom/plugins/zsh-syntax-highlighting && (cd /opt/oh-my-zsh/custom/plugins/zsh-syntax-highlighting && git pull origin master)",
							   "test -d /opt/oh-my-zsh/custom/plugins/zsh-autosuggestions && (cd /opt/oh-my-zsh/custom/plugins/zsh-autosuggestions && git pull origin master)" ],
		"cmd_update": null,
		"zeal_pkg": null,
		"junest_env": null,
		"vsc_env": { "ZDOTDIR": "/opt/zsh" }
	},
	"vim-gigix": {
		"enabled": false,
		"cmd_pre": [ "[ -f \"${FontsDir}/DejaVuSansMono-Bold-Oblique-Powerline.ttf\" ] || curl -L https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Bold%20Oblique%20for%20Powerline.ttf > \"${FontsDir}/DejaVuSansMono-Bold-Oblique-Powerline.ttf\"",
					 "[ -f \"${FontsDir}/DejaVuSansMono-Bold-Powerline.ttf\" ] || curl -L https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Bold%20for%20Powerline.ttf > \"${FontsDir}/DejaVuSansMono-Bold-Powerline.ttf\"",
					 "[ -f \"${FontsDir}/DejaVuSansMono-Oblique-Powerline.ttf\" ] || curl -L https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Oblique%20for%20Powerline.ttf > \"${FontsDir}/DejaVuSansMono-Oblique-Powerline.ttf\"",
					 "[ -f \"${FontsDir}/DejaVuSansMono-Powerline.ttf\" ] || curl -L https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20for%20Powerline.ttf > \"${FontsDir}/DejaVuSansMono-Powerline.ttf\"" ],
		"junest_cmd_pre": null,
		"junest_pkg": [ "curl",
					   "python3",
					   "vi",
					   "vim" ],
		"vsc_pkg": null,
		"vsc_settings": null,
		"vsc_keyboard": null,
		"junest_cmd_post": [ "test -f /opt/vim-gigix/vimrc || (mkdir -p /opt/vim-gigix && curl https://raw.githubusercontent.com/gigi206/vim-gigix/master/.vimrc | sed 's@\\(.*dein#add.*Valloric/YouCompleteMe.*\\)@\"\\1@g' > /opt/vim-gigix/vimrc)",
							"test -d /opt/vim-gigix/bundle || (sh <(curl -s https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh) /opt/vim-gigix/bundle && VimPlugin=/opt/vim-gigix vim -c 'try | call dein#update() | call dein#recache_runtimepath() | finally | qall! | endtry' -N -u /opt/vim-gigix/vimrc -U NONE -i NONE -V1 -e -s && echo)",
							"test -f /opt/oh-my-zsh/custom/vim.zsh || (echo 'alias vim=\"VimPlugin=/opt/vim-gigix vim -u /opt/vim-gigix/vimrc\"' > /opt/oh-my-zsh/custom/vim.zsh)" ],
		"cmd_post": null,
		"junest_cmd_update": [ "VimPlugin=/opt/vim-gigix vim -c 'try | call dein#update() | call dein#recache_runtimepath() | finally | qall! | endtry' -N -u /opt/vim-gigix/vimrc -U NONE -i NONE -V1 -e -s && echo" ],
		"cmd_update": null,
		"zeal_pkg": [ "Vim" ],
		"junest_env": null,
		"vsc_env": null
	},
	"python": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "python2",
					    "python2-pip",
					    "python3",
					    "python-pip",
					    "ctags" ],
		"vsc_pkg": [ "ms-python.python" ],
		"vsc_settings": { "python.linting.pylintEnabled": false,
						  "python.linting.flake8Enabled": true,
						  "python.linting.enabled": true,
						  "python.disableInstallationCheck": true },
		"vsc_keyboard": null,
		"junest_cmd_post": [ "pip2 show rope | egrep '^Location: /usr' || pip2 install --force-reinstall rope",
							 "pip2 show flake8 | egrep '^Location: /usr' || pip2 install --force-reinstall flake8",
							 "pip3 show rope | egrep '^Location: /usr' || pip3 install --force-reinstall rope",
							 "pip3 show flake8 | egrep '^Location: /usr' || pip3 install --force-reinstall flake8" ],
		"cmd_post": null,
		"junest_cmd_update": [ "#pip2 list --outdated | cut -d ' ' -f 1 | xargs -n1 pip2 install -U",
							   "#pip3 list --outdated | cut -d ' ' -f 1 | xargs -n1 pip3 install -U",
							   "pip2 install -U rope flake8",
							   "pip3 install -U rope flake8" ],
		"cmd_update": null,
		"zeal_pkg": [ "Python_2",
					  "Python_3",
					  "PEPs" ],
		"junest_env": null,
		"vsc_env": null
	},
	"ruby": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "ruby",
						"rubygems",
					    "gcc",
		 			    "make",
					    "autoconf",
					    "gmp",
					    "libxml2",
					    "libxslt" ],
		"vsc_pkg": [ "rebornix.Ruby",
					 "castwide.solargraph" ],
		"vsc_settings": { "ruby.lint": { "reek": true,
										 "rubocop": false,
										 "ruby": true,
										 "fasterer": true,
										 "debride": true,
										 "ruby-lint": true },
						  "ruby.codeCompletion": false,
						  "ruby.format": false,
						  "ruby.intellisense": false,
						  "solargraph.autoformat": true,
						  "solargraph.hover": true,
						  "solargraph.completion": true,
						  "solargraph.diagnostics": true,
						  "solargraph.formatting": true },
		"vsc_keyboard": null,
		"junest_cmd_post": [ "gem list | egrep '^rdoc ' || gem install --no-user-install rdoc",
							 "gem list | egrep '^fastri ' || gem install --no-user-install fastri",
							 "gem list | egrep '^rubygems-update ' || gem install --no-user-install rubygems-update",
							 "gem list | egrep '^ruby-debug-ide ' || gem install --no-user-install ruby-debug-ide",
							 "gem list | egrep '^rcodetools ' || gem install --no-user-install rcodetools",
							 "gem list | egrep '^reek ' || gem install --no-user-install reek",
							 "gem list | egrep '^fasterer ' || gem install --no-user-install fasterer",
							 "gem list | egrep '^debride ' || gem install --no-user-install debride",
							 "gem list | egrep '^ruby-lint ' || gem install --no-user-install ruby-lint",
							 "gem list | egrep '^solargraph ' || gem install --no-user-install solargraph" ],
		"cmd_post": null,
		"junest_cmd_update": [ "#gem update --system",
							   "gem update --no-user-install rdoc fastri rubygems-update ruby-debug-ide rcodetools reek fasterer debride ruby-lint solargraph" ],
		"cmd_update": null,
		"zeal_pkg": [ "Ruby",
					  "Ruby_2" ],
		"junest_env": null,
		"vsc_env": null
	},
	"perl": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "perl",
					   "ctags",
					   "gcc",
					   "make" ],
		"vsc_pkg": [ "henriiik.vscode-perl",
					 "mortenhenriksen.perl-debug" ],
		"vsc_settings": { "perl.perltidy": "${JunestAppPath_install}/usr/bin/site_perl/perltidy" },
		"vsc_keyboard": null,
		"junest_cmd_post": [ "test -x /usr/bin/site_perl/perltidy || yes yes | perl /usr/bin/core_perl/cpan Perl::Tidy" ],
		"cmd_post": null,
		"junest_cmd_update": [ "#cpan -u",
							   "cpan Perl::Tidy" ],
		"cmd_update": null,
		"zeal_pkg": [ "Perl",
		              "Perl6" ],
		"junest_env": null,
		"vsc_env": null
	},
	"C/C++": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "gcc" ],
		"vsc_pkg": [ "ms-vscode.cpptools" ],
		"vsc_settings": null,
		"vsc_keyboard": null,
		"junest_cmd_post": null,
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": [ "C",
		              "C++" ],
		"junest_env": null,
		"vsc_env": null
	},
	"C#": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "dotnet-sdk",
						"openssl" ],
		"vsc_pkg": [ "ms-vscode.csharp" ],
		"vsc_settings": null,
		"vsc_keyboard": null,
		"junest_cmd_post": null,
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": [ "NET_Framework" ],
		"junest_env": null,
		"vsc_env": null
	},
	"shell": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "shellcheck" ],
		"vsc_pkg": [ "timonwong.shellcheck" ],
		"vsc_settings": null,
		"vsc_keyboard": null,
		"junest_cmd_post": null,
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": [ "Bash",
					  "Zsh",
					  "Linux_Man_Pages" ],
		"junest_env": null,
		"vsc_env": null
	},
	"go": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "go",
					   "gcc" ],
		"vsc_pkg": [ "ms-vscode.go" ],
		"vsc_settings": { "go.useLanguageServer": true,
						  "go.lintTool": "gometalinter" },
		"vsc_keyboard": null,
		"junest_cmd_post": [ "test -f /opt/go-modules/bin/go-outline || GOPATH='/opt/go-modules' go get -u -v github.com/ramya-rao-a/go-outline",
							 "test -f /opt/go-modules/bin/go-symbols || GOPATH='/opt/go-modules' go get -u -v github.com/acroca/go-symbols",
							 "test -f /opt/go-modules/bin/gocode || GOPATH='/opt/go-modules' go get -u -v github.com/nsf/gocode",
							 "test -f /opt/go-modules/bin/godef || GOPATH='/opt/go-modules' go get -u -v github.com/rogpeppe/godef",
							 "test -f /opt/go-modules/bin/godoc || GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/godoc",
							 "test -f /opt/go-modules/bin/gogetdoc || GOPATH='/opt/go-modules' go get -u -v github.com/zmb3/gogetdoc",
							 "test -f /opt/go-modules/bin/golint || GOPATH='/opt/go-modules' go get -u -v github.com/golang/lint/golint",
							 "test -f /opt/go-modules/bin/gomodifytags. || GOPATH='/opt/go-modules' go get -u -v github.com/fatih/gomodifytags",
							 "test -f /opt/go-modules/bin/gopkgs || GOPATH='/opt/go-modules' go get -u -v github.com/uudashr/gopkgs/cmd/gopkgs",
							 "test -f /opt/go-modules/bin/gorename || GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/gorename",
							 "test -f /opt/go-modules/bin/goreturns || GOPATH='/opt/go-modules' go get -u -v sourcegraph.com/sqs/goreturns",
							 "test -f /opt/go-modules/bin/goimports || GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/goimports",
							 "go list | egrep '^github.com/cweill/gotests$' || GOPATH='/opt/go-modules' go get -u -v github.com/cweill/gotests",
							 "test -f /opt/go-modules/bin/guru || GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/guru",
							 "test -f /opt/go-modules/bin/impl || GOPATH='/opt/go-modules' go get -u -v github.com/josharian/impl",
							 "test -f /opt/go-modules/bin/goplay || GOPATH='/opt/go-modules' go get -u -v github.com/haya14busa/goplay/cmd/goplay",
							 "test -f /opt/go-modules/bin/fillstruct || GOPATH='/opt/go-modules' go get -u -v github.com/davidrjenni/reftools/cmd/fillstruct",
							 "test -f /opt/go-modules/bin/dlv || GOPATH='/opt/go-modules' go get -u -v github.com/derekparker/delve/cmd/dlv",
							 "test -f /opt/go-modules/bin/gometalinter || GOPATH='/opt/go-modules' go get -u -v github.com/alecthomas/gometalinter" ],
		"cmd_post": null,
        "junest_cmd_update": [ "#go get -u all",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/ramya-rao-a/go-outline",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/acroca/go-symbols",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/nsf/gocode",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/rogpeppe/godef",
							   "GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/godoc",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/zmb3/gogetdoc",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/golang/lint/golint",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/fatih/gomodifytags",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/uudashr/gopkgs/cmd/gopkgs",
							   "GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/gorename",
							   "GOPATH='/opt/go-modules' go get -u -v sourcegraph.com/sqs/goreturns",
							   "GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/goimports",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/cweill/gotests",
							   "GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/guru",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/josharian/impl",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/haya14busa/goplay/cmd/goplay",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/davidrjenni/reftools/cmd/fillstruct",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/derekparker/delve/cmd/dlv",
							   "GOPATH='/opt/go-modules' go get -u -v github.com/alecthomas/gometalinter" ],
		"cmd_update": null,
		"zeal_pkg": [ "Go" ],
		"junest_env": { "GOPATH": "/opt/go-modules",
					    "PATH": "/opt/go-modules/bin" },
		"vsc_env": { "GOPATH": "/opt/go-modules",
					 "PATH": "/opt/go-modules/bin" }
	},
	"java": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "jdk10-openjdk" ],
		"vsc_pkg": [ "vscjava.vscode-java-pack" ],
		"vsc_settings": null,
		"vsc_keyboard": null,
		"junest_cmd_post": null,
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": [ "Java_SE8",
					  "Java_SE9" ],
		"junest_env": null,
		"vsc_env": null
	},
	"php": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "php" ],
		"vsc_pkg": [ "felixfbecker.php-intellisense",
					 "felixfbecker.php-debug" ],
		"vsc_settings": { "php.validate.run": "onType" },
		"vsc_keyboard": null,
		"junest_cmd_post": null,
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": [ "PHP" ],
		"junest_env": null,
		"vsc_env": null
	},
	"javascript": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "nodejs",
						 "npm" ],
		"vsc_pkg": [ "waderyan.nodejs-extension-pack" ],
		"vsc_settings": { "eslint.alwaysShowStatus": true },
		"vsc_keyboard": null,
		"junest_cmd_post": [ "npm ls -g --depth=0 | grep ' eslint@' || npm install -g eslint" ],
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": [ "npm update -g eslint" ],
		"zeal_pkg": [ "JavaScript" ],
		"junest_env": null,
		"vsc_env": null
	},
	"css": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": null,
		"vsc_pkg": [ "Zignd.html-css-class-completion",
					 "pranaygp.vscode-css-peek" ],
		"vsc_settings": null,
		"vsc_keyboard": null,
		"junest_cmd_post": null,
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": [ "CSS",
					  "HTML",
					  "Emmet" ],
		"junest_env": null,
		"vsc_env": null
	},
	"powershell": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "awk",
						"git",
						"dotnet-sdk" ],
		"vsc_pkg": [ "ms-vscode.PowerShell" ],
		"vsc_settings": { "dash.docset.powershell": [ "posh" ] },
		"vsc_keyboard": null,
		"junest_cmd_post": [ "VERSION=$(git ls-remote --tags https://github.com/PowerShell/PowerShell.git | egrep '/v[0-9]+.[0-9]+.[0-9]+$' | awk -F'/' '{ print $NF }' | tail -1 | tail -c +2) && test -d /opt/powershell || (rm -fr /opt/powershell && mkdir -p /opt/powershell/${VERSION}/bin && curl -L https://github.com/PowerShell/PowerShell/releases/download/v${VERSION}/powershell-${VERSION}-linux-x64.tar.gz | tar xz -C /opt/powershell/${VERSION}) && cd /opt/powershell/${VERSION}/bin && ln -s ../pwsh . && cd /opt/powershell && ln -s ${VERSION} current" ],
		"cmd_post": null,
		"junest_cmd_update": [ "VERSION=$(git ls-remote --tags https://github.com/PowerShell/PowerShell.git | egrep '/v[0-9]+.[0-9]+.[0-9]+$' | awk -F'/' '{ print $NF }' | tail -1 | tail -c +2) && test -d /opt/powershell/${VERSION} || (rm -fr /opt/powershell && mkdir -p /opt/powershell/${VERSION}/bin && curl -L https://github.com/PowerShell/PowerShell/releases/download/v${VERSION}/powershell-${VERSION}-linux-x64.tar.gz | tar xz -C /opt/powershell/${VERSION}) && cd /opt/powershell/${VERSION}/bin && ln -s ../pwsh . && cd /opt/powershell && ln -s ${VERSION} current" ],
		"cmd_update": null,
		"zeal_pkg": [ "Powershell" ],
		"junest_env": { "PATH": "/opt/powershell/current/bin" },
		"vsc_env": { "PATH": "/opt/powershell/current/bin" }
	},
	"docker": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "docker"],
		"vsc_pkg": [ "PeterJausovec.vscode-docker" ],
		"vsc_settings": { "dash.docset.dockerfile": [ "docker" ] },
		"vsc_keyboard": null,
		"junest_cmd_post": null,
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": [ "Docker" ],
		"junest_env": null,
		"vsc_env": null
	},
	"ansible": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "ansible" ],
		"vsc_pkg": [ "vscoss.vscode-ansible" ],
		"vsc_settings": null,
		"vsc_keyboard": null,
		"junest_cmd_post": null,
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": [ "Ansible",
					  "Jinja" ],
		"junest_env": null,
		"vsc_env": null
	},
	"puppet": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "puppet",
						"ruby",
						"rubygems" ],
		"vsc_pkg": [ "jpogran.puppet-vscode" ],
		"vsc_settings": null,
		"vsc_keyboard": null,
		"junest_cmd_post": [ "gem list | egrep '^puppet-lint ' || gem install --no-user-install puppet-lint" ],
		"cmd_post": null,
		"junest_cmd_update": [ "gem update --no-user-install puppet-lint" ],
		"cmd_update": null,
		"zeal_pkg": [ "Puppet" ],
		"junest_env": null,
		"vsc_env": null
	},
	"salstack": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": null,
		"vsc_pkg": [ "korekontrol.saltstack" ],
		"vsc_settings": { "dash.docset.sls": [ "salt" ] },
		"vsc_keyboard": null,
		"junest_cmd_post": null,
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": [ "SaltStack",
					  "Jinja" ],
		"junest_env": null,
		"vsc_env": null
	},
	"markdown": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": null,
		"vsc_pkg": [ "DavidAnson.vscode-markdownlint",
					 "mdickin.markdown-shortcuts",
					 "AlanWalk.markdown-toc" ],
		"vsc_settings": { "markdown-toc.depthFrom": 2 },
		"vsc_keyboard": null,
		"junest_cmd_post": null,
		"cmd_post": null,
		"junest_cmd_update": null,
		"cmd_update": null,
		"zeal_pkg": [ "Markdown" ],
		"junest_env": null,
		"vsc_env": null
	},
	"restructuredtext": {
		"enabled": false,
		"cmd_pre": null,
		"junest_cmd_pre": null,
		"junest_pkg": [ "python3",
					    "python-pip" ],
		"vsc_pkg": [ "lextudio.restructuredtext" ],
		"vsc_settings": null,
		"vsc_keyboard": null,
		"junest_cmd_post": [ "pip show doc8 | egrep '^Location: /usr' || pip3 install --force-reinstall doc8",
							 "pip show sphinx | egrep '^Location: /usr' || pip3 install --force-reinstall sphinx",
							 "pip show sphinx-autobuild | egrep '^Location: /usr' || pip3 install --force-reinstall sphinx-autobuild" ],
		"cmd_post": null,
		"junest_cmd_update": ["pip3 install -U doc8 sphinx sphinx-autobuild" ],
		"cmd_update": null,
		"zeal_pkg": null,
		"junest_env": null,
		"vsc_env": null
	}
}
}